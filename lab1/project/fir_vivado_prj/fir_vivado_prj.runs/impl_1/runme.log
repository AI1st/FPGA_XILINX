
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


ECHO 处于关闭状态。
ECHO 处于关闭状态。

****** Vivado v2023.1 (64-bit)
  **** SW Build 3865809 on Sun May  7 15:05:29 MDT 2023
  **** IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
  **** SharedData Build 3865790 on Sun May 07 13:33:03 MDT 2023
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_hls_prj/solution1/impl/export'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'G:/Vitis_HLS/Vivado/2023.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.cache/ip 
Command: link_design -top design_1_wrapper -part xc7z020clg484-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_fir_wrap_0_0/design_1_fir_wrap_0_0.dcp' for cell 'design_1_i/fir_wrap_0'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_50M_0/design_1_rst_ps7_0_50M_0.dcp' for cell 'design_1_i/rst_ps7_0_50M'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_auto_pc_1/design_1_auto_pc_1.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0.dcp' for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint 'g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.589 . Memory (MB): peak = 1038.492 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 4026 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2023.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_50M_0/design_1_rst_ps7_0_50M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_50M_0/design_1_rst_ps7_0_50M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_50M/U0'
Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_50M_0/design_1_rst_ps7_0_50M_0.xdc] for cell 'design_1_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_rst_ps7_0_50M_0/design_1_rst_ps7_0_50M_0.xdc] for cell 'design_1_i/rst_ps7_0_50M/U0'
Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
Finished Parsing XDC File [g:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.gen/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s00_couplers/auto_us/inst'
INFO: [Project 1-1714] 3 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 1204.078 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 3 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 2 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 

18 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:05 ; elapsed = 00:00:16 . Memory (MB): peak = 1204.078 ; gain = 689.844
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 1230.191 ; gain = 26.113

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 18f7eb580

Time (s): cpu = 00:00:03 ; elapsed = 00:00:07 . Memory (MB): peak = 1841.453 ; gain = 611.262

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-1566] Pulled 8 inverters resulting in an inversion of 40 pins
INFO: [Opt 31-138] Pushed 1 inverter(s) to 2 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1f7d82219

Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 18 cells and removed 72 cells
INFO: [Opt 31-1021] In phase Retarget, 27 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 5 inverter(s) to 10 load pin(s).
Phase 2 Constant propagation | Checksum: 1d788004c

Time (s): cpu = 00:00:01 ; elapsed = 00:00:03 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 1708 cells and removed 4848 cells
INFO: [Opt 31-1021] In phase Constant propagation, 27 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 198a16d41

Time (s): cpu = 00:00:02 ; elapsed = 00:00:04 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 952 cells
INFO: [Opt 31-1021] In phase Sweep, 96 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 198a16d41

Time (s): cpu = 00:00:02 ; elapsed = 00:00:04 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: db020faa

Time (s): cpu = 00:00:02 ; elapsed = 00:00:06 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1326953b6

Time (s): cpu = 00:00:02 ; elapsed = 00:00:06 . Memory (MB): peak = 2189.703 ; gain = 0.000
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 33 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              18  |              72  |                                             27  |
|  Constant propagation         |            1708  |            4848  |                                             27  |
|  Sweep                        |               0  |             952  |                                             96  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             33  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.067 . Memory (MB): peak = 2189.703 ; gain = 0.000
Ending Logic Optimization Task | Checksum: e33a9370

Time (s): cpu = 00:00:02 ; elapsed = 00:00:06 . Memory (MB): peak = 2189.703 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 2 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 2 newly gated: 1 Total Ports: 4
Ending PowerOpt Patch Enables Task | Checksum: 15e2d6798

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.182 . Memory (MB): peak = 2374.242 ; gain = 0.000
Ending Power Optimization Task | Checksum: 15e2d6798

Time (s): cpu = 00:00:04 ; elapsed = 00:00:07 . Memory (MB): peak = 2374.242 ; gain = 184.539

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 15e2d6798

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.004 . Memory (MB): peak = 2374.242 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.092 . Memory (MB): peak = 2374.242 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 11dbfb969

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.097 . Memory (MB): peak = 2374.242 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
45 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:11 ; elapsed = 00:00:24 . Memory (MB): peak = 2374.242 ; gain = 1170.164
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.499 . Memory (MB): peak = 2374.242 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 2374.242 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 648778df

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.282 . Memory (MB): peak = 2374.242 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.009 . Memory (MB): peak = 2374.242 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 05debd2e

Time (s): cpu = 00:00:01 ; elapsed = 00:00:05 . Memory (MB): peak = 2374.242 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 1298f1a96

Time (s): cpu = 00:00:03 ; elapsed = 00:00:11 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 1298f1a96

Time (s): cpu = 00:00:03 ; elapsed = 00:00:11 . Memory (MB): peak = 2397.855 ; gain = 23.613
Phase 1 Placer Initialization | Checksum: 1298f1a96

Time (s): cpu = 00:00:03 ; elapsed = 00:00:12 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 9b1c8f19

Time (s): cpu = 00:00:04 ; elapsed = 00:00:14 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: f3fd9390

Time (s): cpu = 00:00:04 ; elapsed = 00:00:15 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: f3fd9390

Time (s): cpu = 00:00:04 ; elapsed = 00:00:15 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 2.4 Global Placement Core

Phase 2.4.1 UpdateTiming Before Physical Synthesis
Phase 2.4.1 UpdateTiming Before Physical Synthesis | Checksum: 1cfa464f0

Time (s): cpu = 00:00:11 ; elapsed = 00:00:29 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 2.4.2 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 1644 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 782 nets or LUTs. Breaked 0 LUT, combined 782 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 2397.855 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            782  |                   782  |           0  |           1  |  00:00:01  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            782  |                   782  |           0  |           4  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.2 Physical Synthesis In Placer | Checksum: 24071b35e

Time (s): cpu = 00:00:12 ; elapsed = 00:00:32 . Memory (MB): peak = 2397.855 ; gain = 23.613
Phase 2.4 Global Placement Core | Checksum: 1094a0343

Time (s): cpu = 00:00:12 ; elapsed = 00:00:33 . Memory (MB): peak = 2397.855 ; gain = 23.613
Phase 2 Global Placement | Checksum: 1094a0343

Time (s): cpu = 00:00:13 ; elapsed = 00:00:33 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 106e8a25a

Time (s): cpu = 00:00:13 ; elapsed = 00:00:35 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 24ed6777a

Time (s): cpu = 00:00:14 ; elapsed = 00:00:39 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1cff649f7

Time (s): cpu = 00:00:14 ; elapsed = 00:00:40 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 26a4e92d9

Time (s): cpu = 00:00:14 ; elapsed = 00:00:40 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: b590bd1d

Time (s): cpu = 00:00:16 ; elapsed = 00:00:47 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: ec5af90b

Time (s): cpu = 00:00:16 ; elapsed = 00:00:48 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 13609838e

Time (s): cpu = 00:00:17 ; elapsed = 00:00:49 . Memory (MB): peak = 2397.855 ; gain = 23.613
Phase 3 Detail Placement | Checksum: 13609838e

Time (s): cpu = 00:00:17 ; elapsed = 00:00:49 . Memory (MB): peak = 2397.855 ; gain = 23.613

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: eed5f136

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=8.754 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 1a0129f5b

Time (s): cpu = 00:00:00 ; elapsed = 00:00:01 . Memory (MB): peak = 2422.043 ; gain = 12.941
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/fir_int_int_shift_reg_50, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U195/ap_enable_reg_pp0_iter1_reg_0[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U196/E[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_ln19_78_reg_4417[31]_i_1_n_2, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/gmem_m_axi_U/bus_write/wreq_burst_conv/rs_req/SR[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U196/p_ZZ3firPiiE9shift_reg_790, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 6 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 6, Skipped due to Timing Degradation: 0, Skipped due to netlist editing failed: 0.
Ending Physical Synthesis Task | Checksum: 1a0129f5b

Time (s): cpu = 00:00:00 ; elapsed = 00:00:02 . Memory (MB): peak = 2426.828 ; gain = 17.727
Phase 4.1.1.1 BUFG Insertion | Checksum: eed5f136

Time (s): cpu = 00:00:19 ; elapsed = 00:00:59 . Memory (MB): peak = 2426.828 ; gain = 52.586

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=8.754. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 17ac68878

Time (s): cpu = 00:00:20 ; elapsed = 00:00:59 . Memory (MB): peak = 2426.828 ; gain = 52.586

Time (s): cpu = 00:00:20 ; elapsed = 00:00:59 . Memory (MB): peak = 2426.828 ; gain = 52.586
Phase 4.1 Post Commit Optimization | Checksum: 17ac68878

Time (s): cpu = 00:00:20 ; elapsed = 00:00:59 . Memory (MB): peak = 2426.828 ; gain = 52.586

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 17ac68878

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                4x4|
|___________|___________________|___________________|
|       East|                1x1|                2x2|
|___________|___________________|___________________|
|       West|                1x1|                1x1|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 17ac68878

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586
Phase 4.3 Placer Reporting | Checksum: 17ac68878

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.046 . Memory (MB): peak = 2426.828 ; gain = 0.000

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586
Phase 4 Post Placement Optimization and Clean-Up | Checksum: ff8541ee

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586
Ending Placer Task | Checksum: 6b991847

Time (s): cpu = 00:00:20 ; elapsed = 00:01:00 . Memory (MB): peak = 2426.828 ; gain = 52.586
INFO: [Common 17-83] Releasing license: Implementation
86 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:21 ; elapsed = 00:01:02 . Memory (MB): peak = 2426.828 ; gain = 52.586
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.051 . Memory (MB): peak = 2426.828 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.060 . Memory (MB): peak = 2426.828 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:03 ; elapsed = 00:00:05 . Memory (MB): peak = 2438.602 ; gain = 11.773
INFO: [Common 17-1381] The checkpoint 'G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:10 . Memory (MB): peak = 2438.602 ; gain = 11.773
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'

Starting Initial Update Timing Task

Time (s): cpu = 00:00:01 ; elapsed = 00:00:04 . Memory (MB): peak = 2530.785 ; gain = 92.184
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
95 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:03 ; elapsed = 00:00:05 . Memory (MB): peak = 2571.973 ; gain = 41.043
INFO: [Common 17-1381] The checkpoint 'G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:04 ; elapsed = 00:00:07 . Memory (MB): peak = 2571.973 ; gain = 41.188
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: 697ed3b1 ConstDB: 0 ShapeSum: 21a4496 RouteDB: 0
Post Restoration Checksum: NetGraph: d07fdd10 | NumContArr: 73f267fe | Constraints: 190a55ad | Timing: 0
Phase 1 Build RT Design | Checksum: 15d7c9abb

Time (s): cpu = 00:00:09 ; elapsed = 00:00:20 . Memory (MB): peak = 2672.844 ; gain = 68.676

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 15d7c9abb

Time (s): cpu = 00:00:09 ; elapsed = 00:00:20 . Memory (MB): peak = 2672.844 ; gain = 68.676

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 15d7c9abb

Time (s): cpu = 00:00:09 ; elapsed = 00:00:20 . Memory (MB): peak = 2672.844 ; gain = 68.676
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: 2270a55df

Time (s): cpu = 00:00:12 ; elapsed = 00:00:29 . Memory (MB): peak = 2672.844 ; gain = 68.676
INFO: [Route 35-416] Intermediate Timing Summary | WNS=8.864  | TNS=0.000  | WHS=-0.215 | THS=-312.689|


Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 47594
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 47594
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: 22c737137

Time (s): cpu = 00:00:14 ; elapsed = 00:00:33 . Memory (MB): peak = 2761.629 ; gain = 157.461

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 22c737137

Time (s): cpu = 00:00:14 ; elapsed = 00:00:33 . Memory (MB): peak = 2761.629 ; gain = 157.461
Phase 3 Initial Routing | Checksum: 1d1d76c36

Time (s): cpu = 00:00:15 ; elapsed = 00:00:36 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2757
 Number of Nodes with overlaps = 30
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.194  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 203998e45

Time (s): cpu = 00:00:21 ; elapsed = 00:00:45 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.216  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1effbe9a3

Time (s): cpu = 00:00:21 ; elapsed = 00:00:46 . Memory (MB): peak = 2777.090 ; gain = 172.922
Phase 4 Rip-up And Reroute | Checksum: 1effbe9a3

Time (s): cpu = 00:00:21 ; elapsed = 00:00:46 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1effbe9a3

Time (s): cpu = 00:00:21 ; elapsed = 00:00:46 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1effbe9a3

Time (s): cpu = 00:00:21 ; elapsed = 00:00:46 . Memory (MB): peak = 2777.090 ; gain = 172.922
Phase 5 Delay and Skew Optimization | Checksum: 1effbe9a3

Time (s): cpu = 00:00:22 ; elapsed = 00:00:46 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 24a36cae9

Time (s): cpu = 00:00:23 ; elapsed = 00:00:48 . Memory (MB): peak = 2777.090 ; gain = 172.922
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.216  | TNS=0.000  | WHS=0.009  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 250bd429d

Time (s): cpu = 00:00:23 ; elapsed = 00:00:48 . Memory (MB): peak = 2777.090 ; gain = 172.922
Phase 6 Post Hold Fix | Checksum: 250bd429d

Time (s): cpu = 00:00:23 ; elapsed = 00:00:48 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 8.80693 %
  Global Horizontal Routing Utilization  = 10.4121 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 22dca3666

Time (s): cpu = 00:00:23 ; elapsed = 00:00:48 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 22dca3666

Time (s): cpu = 00:00:23 ; elapsed = 00:00:48 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1e8336cf4

Time (s): cpu = 00:00:24 ; elapsed = 00:00:50 . Memory (MB): peak = 2777.090 ; gain = 172.922

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.216  | TNS=0.000  | WHS=0.009  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1e8336cf4

Time (s): cpu = 00:00:25 ; elapsed = 00:00:52 . Memory (MB): peak = 2777.090 ; gain = 172.922
INFO: [Route 35-16] Router Completed Successfully

Phase 11 Post-Route Event Processing
Phase 11 Post-Route Event Processing | Checksum: ecd69509

Time (s): cpu = 00:00:26 ; elapsed = 00:00:52 . Memory (MB): peak = 2777.090 ; gain = 172.922

Time (s): cpu = 00:00:26 ; elapsed = 00:00:52 . Memory (MB): peak = 2777.090 ; gain = 172.922

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
110 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:00:27 ; elapsed = 00:00:54 . Memory (MB): peak = 2777.090 ; gain = 205.117
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:10 ; elapsed = 00:00:10 . Memory (MB): peak = 2895.480 ; gain = 118.391
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
120 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 2901.574 ; gain = 6.094
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:06 . Memory (MB): peak = 2945.609 ; gain = 28.355
INFO: [Common 17-1381] The checkpoint 'G:/fpga_design/fpga_learning/fpga_summer_camp/project/fir_vivado_prj/fir_vivado_prj.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:04 ; elapsed = 00:00:08 . Memory (MB): peak = 2945.609 ; gain = 28.355
INFO: [Common 17-206] Exiting Vivado at Thu Jul 13 00:48:59 2023...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


ECHO 处于关闭状态。
ECHO 处于关闭状态。

****** Vivado v2023.1 (64-bit)
  **** SW Build 3865809 on Sun May  7 15:05:29 MDT 2023
  **** IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
  **** SharedData Build 3865790 on Sun May 07 13:33:03 MDT 2023
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp
INFO: [Device 21-403] Loading part xc7z020clg484-1
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.487 . Memory (MB): peak = 965.574 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 3444 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2023.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF Files: Time (s): cpu = 00:00:02 ; elapsed = 00:00:03 . Memory (MB): peak = 1827.562 ; gain = 47.867
Restored from archive | CPU: 2.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:03 . Memory (MB): peak = 1827.562 ; gain = 47.867
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.008 . Memory (MB): peak = 1827.562 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 3 instances were transformed.
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 2 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 

INFO: [Project 1-604] Checkpoint was created with Vivado v2023.1 (64-bit) build 3865809
open_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:22 . Memory (MB): peak = 1827.562 ; gain = 1527.324
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'G:/Vitis_HLS/Vivado/2023.1/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U147/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U147/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U148/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U148/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U149/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U149/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U150/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U150/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U151/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U151/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U152/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U152/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U153/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U153/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U154/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U154/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U155/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U155/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U156/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U156/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U157/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U157/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U158/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U158/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U159/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U159/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U160/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U160/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U161/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U161/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U162/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U162/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U163/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U163/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U164/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U164/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U165/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U165/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U166/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U166/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U167/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U167/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U168/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U168/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U169/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U169/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U170/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U170/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U171/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U171/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U172/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U172/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U173/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U173/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U174/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U174/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U175/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U175/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U176/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U176/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U177/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U177/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U178/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U178/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U179/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U179/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U180/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U180/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U181/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U181/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U182/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U182/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U183/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U183/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U184/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U184/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U185/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U185/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U186/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U186/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U187/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U187/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U188/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U188/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U189/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U189/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U190/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U190/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U191/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U191/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U192/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U192/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U193/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U193/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U194/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U194/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U195/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U195/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U196/tmp_product__0 output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U196/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U197/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U197/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U198/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U198/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U199/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U199/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U200/tmp_product output design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U200/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U102/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U103/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U104/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U105/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U106/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U107/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U108/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U109/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U110/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U111/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U112/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product__0 multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U113/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U114/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U115/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U116/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U117/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U118/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U119/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U120/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U121/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U122/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U123/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U124/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U125/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U126/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U127/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U128/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U129/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U130/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U131/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U132/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U133/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U134/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U135/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U136/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U137/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U138/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U139/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U140/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U141/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U142/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U143/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U144/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U145/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/buff0_reg multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/tmp_product multiplier stage design_1_i/fir_wrap_0/inst/grp_fir_wrap_Pipeline_VITIS_LOOP_47_2_fu_717/mul_32s_32s_32_2_1_U146/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A5)+((~A5)*(~A6)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A4)+((~A4)*(~A2)*A5)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A6' of cell design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O6=(A4)+((~A4)*(~A2)*A3)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2:0], design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 312 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-1876] WebTalk data collection is mandatory when using a ULT device. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
23 Infos, 203 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:16 ; elapsed = 00:00:19 . Memory (MB): peak = 2545.336 ; gain = 717.773
INFO: [Common 17-206] Exiting Vivado at Thu Jul 13 00:50:58 2023...
